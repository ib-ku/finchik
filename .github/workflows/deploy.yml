name: Deploy to AWS

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        # Используйте v4 для последних обновлений и исправлений безопасности
        # uses: actions/checkout@v4

      - name: Configure AWS credentials
        # Это действие устанавливает учетные данные AWS для всех последующих шагов в этом задании.
        # Оно является предпочтительным способом аутентификации в AWS в GitHub Actions.
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # Укажите ваш регион AWS здесь

      - name: Setup Terraform
        # Это действие устанавливает Terraform CLI в среде выполнения.
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        # Инициализирует рабочий каталог Terraform.
        # -chdir=iac указывает, что файлы Terraform находятся в подкаталоге 'iac'.
        run: terraform -chdir=iac init

      - name: Terraform Validate
        # Проверяет синтаксис и конфигурацию Terraform.
        run: terraform -chdir=iac validate

      - name: Terraform Plan
        # Генерирует и отображает план выполнения Terraform.
        # -var-file="terraform.tfvars" использует переменные из указанного файла.
        run: terraform -chdir=iac plan -var-file="terraform.tfvars"

      - name: Terraform Apply
        # Применяет изменения, определенные в плане Terraform.
        # -auto-approve автоматически подтверждает применение без запроса.
        # Будьте осторожны с -auto-approve в production-средах.
        # Переменные окружения AWS теперь устанавливаются действием 'Configure AWS credentials' выше,
        # поэтому их не нужно явно указывать здесь.
        run: terraform -chdir=iac apply -auto-approve -var-file="terraform.tfvars"
